package ChinOfResponsibilityDesignPattern_62
/*
将请求的发送和接收解耦，让多个接收对象都有机会处理这个请求。
将这些接收对象串成⼀条链，并沿着这条链传递这个请求，直到链上的某个接收对象能够处理它
为⽌。

应⽤设计模式主要是为了应对代码的复杂性，让其满⾜开闭原则，提⾼
代码的扩展性。这⾥应⽤职责链模式也不例外。

⾸先，我们来看，职责链模式如何应对代码的复杂性。
其次，我们再来看，职责链模式如何让代码满⾜开闭原则，提⾼代码的扩展性
*/

// 查看 mario*domain项目代码中的 rschecker代码细节，即为责任链模式